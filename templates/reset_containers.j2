#!/bin/bash
set -o errexit
{%- import "macros.j2" as macros with context %}

{%- set global=manifest['global'] -%}
{%- set replication=manifest['replication'] -%}
{%- set pods=manifest['pods'] %}

{{ macros.start_over() }}

macro=mysql_check_ptest1_does_not_exist
bats=${macro}.bats
cat <<'__eot__' >$bats
@test "mysql_check_ptest1_does_not_exist" {

{{ macros.mysql_check_ptest1_does_not_exist() }}

}
__eot__
bats $bats

macro=mysql_create_database_ptest1
bats=${macro}.bats
cat <<'__eot__' >$bats
@test "mysql_create_database_ptest1" {

{{ macros.mysql_create_db_on_host('ptest1', pods[0].name) }}

{{ macros.mysql_check_db_exists_everywhere('ptest1') }}

}
__eot__
bats $bats

# cycle start
{% for iter in range(5) %}

{{ macros.delete_pods_and_containers() }}
{{ macros.podman_list_pods() }}

{{ macros.podman_container_volume_setup() }}
{{ macros.podman_create_network() }}

{{ macros.podman_create_pods() }}
{{ macros.podman_create_containers() }}
{{ macros.podman_start_pods() }}

macro=mysql_check_db_ptest1_exists_everywhere
bats=${macro}.bats
cat <<'__eot__' >$bats
@test "mysql_check_db_ptest1exists_everywhere" {

{{ macros.mysql_check_db_exists_everywhere('ptest1') }}

}
__eot__

{{ macros.mysql_setup_replication() }}

bats $bats

{% endfor %}

{% for iter in range(5) %}

{{ macros.delete_pods_and_containers() }}
{{ macros.podman_list_pods() }}

{{ macros.podman_container_volume_setup() }}
{{ macros.podman_create_network() }}

{{ macros.podman_create_pods() }}
{{ macros.podman_create_containers() }}
{{ macros.podman_start_pods() }}

macro=mysql_check_db_ptest1_exists_everywhere
bats=${macro}.bats
cat <<'__eot__' >$bats
@test "mysql_check_db_ptest1_exists_everywhere" {

{{ macros.mysql_check_db_exists_everywhere('ptest1') }}

}
__eot__
bats $bats

{% endfor %}
